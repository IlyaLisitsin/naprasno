<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" type="text/css" href="/stylesheets/button.css" />
</head>
<style>
    body, html {
        padding: 0;
        margin: 0;
    }

    canvas {
        position: fixed;
        height: 100%;
    }

    .buttons-wrapper {
        width: 80%;
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        margin: 0 auto;
    }

    @media screen and (min-width: 1340px) {
        canvas {
            width: 100%;
        }
    }

    /*@media screen and (max-width: 500px) {*/
    /*    .buttons-wrapper {*/
    /*        flex-direction: column !important;*/
    /*        align-items: center;*/
    /*    }*/
    /*}*/


</style>
<canvas id="canvas" width="1920" height="1080"></canvas>
<body>
    <div class="buttons-wrapper">
        <% for(var i = 0; i < JSON.parse(buttons).length; i++) {%>
            <%- include('./button', { button: JSON.parse(buttons)[i] }); %>
        <%} %>
    </div>
</body>

<script>
    const buttons = JSON.parse('<%- buttons %>');
    const S = Math.sin;
    const C = Math.cos;
    const c = document.querySelector('canvas');
    const x = c.getContext('2d');

    function u() {
        const t = new Date().getTime() / 1000 / 3;

        x.save();
        x.fillRect(0, 0, 600, 200);
        x.restore();

        for(i=c.width|=p=355/226;i--;x[i&5?'arc':'moveTo'](960,600-50*z,2e3/z,b=((i>>3)*2+S(i*p)-z)/8%4*p,b))z=2.5-2*t%1+(i>>7)+C(i*p)/2;x.fillStyle='rgb(185, 160, 160)';x.fill()
        window.requestAnimationFrame(u);

    }

    u()

    document.querySelectorAll('.button-container').forEach((container, index) => {
        const id = container.getAttribute('id');
        const audio = document.querySelector(`#${id} audio`);
        const source = document.querySelector(`#${id} audio source`);
        const dataCircle = document.querySelector(`#${id} .ko-progress-circle`);
        const avatar = document.querySelector(`#${id} .ko-progress-circle__overlay`);


        container.addEventListener('click', () => {
            fetch(`https://stormy-woodland-27362.herokuapp.com/buttons/${id}`)
            // fetch(`http://localhost:3000/buttons/${id}`, { referrer: '' })
                .then(response => response.json())
                .then(audioBuffer => {
                    const binary = new Uint8Array(audioBuffer.data);
                    const blob = new Blob([binary], { type : 'audio/ogg' });
                    const blobUrl = URL.createObjectURL(blob);

                    audio.load();
                    source.setAttribute('src', blobUrl)
                    audio.play();
                })
        })

        dataCircle.addEventListener('click', () => audio.play());

        const imgBinary = new Uint8Array(buttons[index].avatarBuffer.data);
        const imgBlob = new Blob([imgBinary], { type : 'image/jpg' });
        const imgBlobUrl = URL.createObjectURL(imgBlob);

        avatar.style = `background-image: url(${imgBlobUrl})`

        audio.addEventListener('playing', () => {
            const i = setInterval(() => {
                dataCircle.setAttribute('data-progress', Math.floor(audio.currentTime / audio.duration * 100));
                if (dataCircle.getAttribute('data-progress') >= 100) {
                    clearInterval(i);
                }
            }, 70)
        })

    })
</script>
</html>


